                        .module DeviceInitialize.c
                        .area text(rom, con, rel)
 0000                   .dbfile DeviceInitialize.c
 0000                   .dbfile F:\工作\单片机\WorkSpace\AccessControlSystem\DeviceInitialize.c
 0000                   .dbfunc e port_init _port_init fV
                        .even
 0000           _port_init::
 0000                   .dbline -1
 0000                   .dbline 10
 0000           ; //DeviceInitialize.c
 0000           ; 
 0000           ; #include <iom128v.h>
 0000           ; #include <macros.h>
 0000           ; #include "DeviceInitialize.h"
 0000           ; #include "USART_Operate.h"
 0000           ; 
 0000           ; //IO端口初始化
 0000           ; void port_init(void)
 0000           ; {
 0000                   .dbline 11
 0000           ;       PORTA = 0x00;
 0000 2224              clr R2
 0002 2BBA              out 0x1b,R2
 0004                   .dbline 12
 0004           ;       DDRA  = 0x00;
 0004 2ABA              out 0x1a,R2
 0006                   .dbline 13
 0006           ;       PORTB = 0x00;
 0006 28BA              out 0x18,R2
 0008                   .dbline 14
 0008           ;       DDRB  = 0x00;
 0008 27BA              out 0x17,R2
 000A                   .dbline 15
 000A           ;       PORTC = 0x00; //仅当m103输出
 000A 25BA              out 0x15,R2
 000C                   .dbline 16
 000C           ;       DDRC  = 0x00;
 000C 24BA              out 0x14,R2
 000E                   .dbline 17
 000E           ;       PORTD = 0x00;
 000E 22BA              out 0x12,R2
 0010                   .dbline 18
 0010           ;       DDRD  = 0x00;
 0010 21BA              out 0x11,R2
 0012                   .dbline 19
 0012           ;       PORTE = 0x00;
 0012 23B8              out 0x3,R2
 0014                   .dbline 20
 0014           ;       DDRE  = 0x00;
 0014 22B8              out 0x2,R2
 0016                   .dbline 21
 0016           ;       PORTF = 0x00;
 0016 20926200          sts 98,R2
 001A                   .dbline 22
 001A           ;       DDRF  = 0x00;
 001A 20926100          sts 97,R2
 001E                   .dbline 23
 001E           ;       PORTG = 0x00;
 001E 20926500          sts 101,R2
 0022                   .dbline 24
 0022           ;       DDRG  = 0x00;
 0022 20926400          sts 100,R2
 0026                   .dbline -2
 0026           L1:
 0026                   .dbline 0 ; func end
 0026 0895              ret
 0028                   .dbend
 0028                   .dbfunc e USART0_Init _USART0_Init fV
 0028           ;           ubrr -> R16,R17
                        .even
 0028           _USART0_Init::
 0028                   .dbline -1
 0028                   .dbline 29
 0028           ; }
 0028           ; 
 0028           ; //USART0初始化
 0028           ; void USART0_Init(unsigned int ubrr)
 0028           ; {
 0028                   .dbline 30
 0028           ;       UBRR0H = (unsigned char)(ubrr>>8); //设置波特率
 0028 1801              movw R2,R16
 002A 232C              mov R2,R3
 002C 3324              clr R3
 002E 20929000          sts 144,R2
 0032                   .dbline 31
 0032           ;       UBRR0L = (unsigned char)ubrr;
 0032 09B9              out 0x9,R16
 0034                   .dbline 32
 0034           ;       UCSR0B = (1<<RXEN0)|(1<<TXEN0); //使能接收器与发送器
 0034 88E1              ldi R24,24
 0036 8AB9              out 0xa,R24
 0038                   .dbline 33
 0038           ;       UCSR0C = (1<<USBS0)|(3<<UCSZ00); //设置帧格式: 8个数据位, 2个停止位
 0038 8EE0              ldi R24,14
 003A 80939500          sts 149,R24
 003E                   .dbline -2
 003E           L2:
 003E                   .dbline 0 ; func end
 003E 0895              ret
 0040                   .dbsym r ubrr 16 i
 0040                   .dbend
 0040                   .dbfunc e USART1_Init _USART1_Init fV
 0040           ;           ubrr -> R16,R17
                        .even
 0040           _USART1_Init::
 0040                   .dbline -1
 0040                   .dbline 38
 0040           ; }
 0040           ; 
 0040           ; //USART1初始化
 0040           ; void USART1_Init(unsigned int ubrr)
 0040           ; {
 0040                   .dbline 39
 0040           ;       UBRR1H = (unsigned char)(ubrr>>8); //设置波特率
 0040 1801              movw R2,R16
 0042 232C              mov R2,R3
 0044 3324              clr R3
 0046 20929800          sts 152,R2
 004A                   .dbline 40
 004A           ;       UBRR1L = (unsigned char)ubrr;
 004A 00939900          sts 153,R16
 004E                   .dbline 41
 004E           ;       UCSR1B = (1<<RXEN1)|(1<<TXEN1); //使能接收器与发送器
 004E 88E1              ldi R24,24
 0050 80939A00          sts 154,R24
 0054                   .dbline 42
 0054           ;       UCSR1C = (1<<USBS1)|(3<<UCSZ01); //设置帧格式: 8个数据位, 2个停止位
 0054 8CE0              ldi R24,12
 0056 80939D00          sts 157,R24
 005A                   .dbline -2
 005A           L3:
 005A                   .dbline 0 ; func end
 005A 0895              ret
 005C                   .dbsym r ubrr 16 i
 005C                   .dbend
 005C                   .dbfunc e init_devices _init_devices fV
                        .even
 005C           _init_devices::
 005C                   .dbline -1
 005C                   .dbline 47
 005C           ; }
 005C           ; 
 005C           ; //设备初始化
 005C           ; void init_devices(void)
 005C           ; {
 005C                   .dbline 49
 005C           ;       //停止错误中断直到设置好
 005C           ;       CLI(); //禁用所有中断
 005C F894              cli
 005E                   .dbline 50
 005E           ;       XDIV  = 0x00; //晶振驱动
 005E 2224              clr R2
 0060 2CBE              out 0x3c,R2
 0062                   .dbline 51
 0062           ;       XMCRA = 0x00; //外部存储器
 0062 20926D00          sts 109,R2
 0066                   .dbline 52
 0066           ;       port_init(); //IO端口初始化
 0066 CCDF              xcall _port_init
 0068                   .dbline 53
 0068           ;       USART0_Init(MYUBRR0); //USART0串口初始化
 0068 05E0              ldi R16,5
 006A 10E0              ldi R17,0
 006C DDDF              xcall _USART0_Init
 006E                   .dbline 54
 006E           ;       USART1_Init(MYUBRR1); //USART1串口初始化
 006E 0BE0              ldi R16,11
 0070 10E0              ldi R17,0
 0072 E6DF              xcall _USART1_Init
 0074                   .dbline 56
 0074           ; 
 0074           ;       MCUCR = 0x00;
 0074 2224              clr R2
 0076 25BE              out 0x35,R2
 0078                   .dbline 57
 0078           ;       EICRA = 0x00; //设置外部中断控制寄存器
 0078 20926A00          sts 106,R2
 007C                   .dbline 58
 007C           ;       EICRB = 0x00; //设置外部中断控制寄存器
 007C 2ABE              out 0x3a,R2
 007E                   .dbline 59
 007E           ;       EIMSK = 0x00;
 007E 29BE              out 0x39,R2
 0080                   .dbline 60
 0080           ;       TIMSK = 0x00; //定时器中断源
 0080 27BE              out 0x37,R2
 0082                   .dbline 61
 0082           ;       ETIMSK = 0x00; //扩展定时器中断源
 0082 20927D00          sts 125,R2
 0086                   .dbline 62
 0086           ;       SEI(); //重新启用中断
 0086 7894              sei
 0088                   .dbline -2
 0088           L4:
 0088                   .dbline 0 ; func end
 0088 0895              ret
 008A                   .dbend
 008A           ;       //所有外围设备现在都已初始化
 008A           ; }
