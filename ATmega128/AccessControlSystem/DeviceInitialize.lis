                        .module DeviceInitialize.c
                        .area text(rom, con, rel)
 0000                   .dbfile DeviceInitialize.c
 0000                   .dbfile F:\工作\单片机\WorkSpace\AccessControlSystem\DeviceInitialize.c
 0000                   .dbfunc e port_init _port_init fV
                        .even
 0000           _port_init::
 0000                   .dbline -1
 0000                   .dbline 10
 0000           ; //DeviceInitialize.c
 0000           ; 
 0000           ; #include <iom128v.h>
 0000           ; #include <macros.h>
 0000           ; #include "DeviceInitialize.h"
 0000           ; #include "USART_Operate.h"
 0000           ; 
 0000           ; //IO端口初始化
 0000           ; void port_init(void)
 0000           ; {
 0000                   .dbline 11
 0000           ;       PORTA = 0x00;
 0000 2224              clr R2
 0002 2BBA              out 0x1b,R2
 0004                   .dbline 12
 0004           ;       DDRA  = 0x00;
 0004 2ABA              out 0x1a,R2
 0006                   .dbline 13
 0006           ;       PORTB = 0x00;
 0006 28BA              out 0x18,R2
 0008                   .dbline 14
 0008           ;       DDRB  = 0x00;
 0008 27BA              out 0x17,R2
 000A                   .dbline 15
 000A           ;       PORTC = 0x00; //仅当m103输出
 000A 25BA              out 0x15,R2
 000C                   .dbline 16
 000C           ;       DDRC  = 0x00;
 000C 24BA              out 0x14,R2
 000E                   .dbline 17
 000E           ;       PORTD = 0x00;
 000E 22BA              out 0x12,R2
 0010                   .dbline 18
 0010           ;       DDRD  = 0x00;
 0010 21BA              out 0x11,R2
 0012                   .dbline 19
 0012           ;       PORTE = 0x00;
 0012 23B8              out 0x3,R2
 0014                   .dbline 20
 0014           ;       DDRE  = 0x00;
 0014 22B8              out 0x2,R2
 0016                   .dbline 21
 0016           ;       PORTF = 0x00;
 0016 20926200          sts 98,R2
 001A                   .dbline 22
 001A           ;       DDRF  = 0x00;
 001A 20926100          sts 97,R2
 001E                   .dbline 23
 001E           ;       PORTG = 0x00;
 001E 20926500          sts 101,R2
 0022                   .dbline 24
 0022           ;       DDRG  = 0x00;
 0022 20926400          sts 100,R2
 0026                   .dbline -2
 0026           L1:
 0026                   .dbline 0 ; func end
 0026 0895              ret
 0028                   .dbend
 0028                   .dbfunc e init_devices _init_devices fV
                        .even
 0028           _init_devices::
 0028                   .dbline -1
 0028                   .dbline 29
 0028           ; }
 0028           ; 
 0028           ; //设备初始化
 0028           ; void init_devices(void)
 0028           ; {
 0028                   .dbline 31
 0028           ;       //停止错误中断直到设置好
 0028           ;       CLI(); //禁用所有中断
 0028 F894              cli
 002A                   .dbline 32
 002A           ;       XDIV  = 0x00; //晶振驱动
 002A 2224              clr R2
 002C 2CBE              out 0x3c,R2
 002E                   .dbline 33
 002E           ;       XMCRA = 0x00; //外部存储器
 002E 20926D00          sts 109,R2
 0032                   .dbline 34
 0032           ;       port_init(); //IO端口初始化
 0032 E6DF              xcall _port_init
 0034                   .dbline 35
 0034           ;       USART0_Init(MYUBRR0); //USART0串口初始化
 0034 05E0              ldi R16,5
 0036 10E0              ldi R17,0
 0038 0E940000          xcall _USART0_Init
 003C                   .dbline 36
 003C           ;       USART1_Init(MYUBRR1); //USART1串口初始化
 003C 0BE0              ldi R16,11
 003E 10E0              ldi R17,0
 0040 0E940000          xcall _USART1_Init
 0044                   .dbline 38
 0044           ; 
 0044           ;       MCUCR = 0x00;
 0044 2224              clr R2
 0046 25BE              out 0x35,R2
 0048                   .dbline 39
 0048           ;       EICRA = 0x00; //设置外部中断控制寄存器
 0048 20926A00          sts 106,R2
 004C                   .dbline 40
 004C           ;       EICRB = 0x00; //设置外部中断控制寄存器
 004C 2ABE              out 0x3a,R2
 004E                   .dbline 41
 004E           ;       EIMSK = 0x00;
 004E 29BE              out 0x39,R2
 0050                   .dbline 42
 0050           ;       TIMSK = 0x00; //定时器中断源
 0050 27BE              out 0x37,R2
 0052                   .dbline 43
 0052           ;       ETIMSK = 0x00; //扩展定时器中断源
 0052 20927D00          sts 125,R2
 0056                   .dbline 44
 0056           ;       SEI(); //重新启用中断
 0056 7894              sei
 0058                   .dbline -2
 0058           L2:
 0058                   .dbline 0 ; func end
 0058 0895              ret
 005A                   .dbend
 005A           ;       //所有外围设备现在都已初始化
 005A           ; }
