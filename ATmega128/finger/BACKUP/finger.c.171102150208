//ICC-AVR application builder : 17/10/31 16:00:25
// Target : M128
// Crystal: 11.0592Mhz

#include <iom128v.h>
#include <macros.h>

#define FOSC 11059200// Clock Speed
#define BAUD 115200
#define MYUBRR FOSC/16/BAUD-1

#define uint unsigned int
#define uchar unsigned char

void port_init(void)
{
	PORTA = 0x00;
 	DDRA  = 0x00;
 	PORTB = 0x00;
 	DDRB  = 0x00;
 	PORTC = 0x00; //m103 output only
 	DDRC  = 0x00;
 	PORTD = 0x00;
 	DDRD  = 0x00;
 	PORTE = 0x00;
 	DDRE  = 0x00;
 	PORTF = 0x00;
 	DDRF  = 0x00;
 	PORTG = 0x00;
 	DDRG  = 0x00;
}

//UART0 initialize
// desired baud rate: 57600
// actual: baud rate:57600 (0.0%)
// char size: 8 bit
// parity: Disabled
void uart0_init(unsigned int ubrr)
{
	/* Set baud rate */
	UBRR0H = (unsigned char)(ubrr>>8);
	UBRR0L = (unsigned char)ubrr;
	/* Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1<<USBS0)|(3<<UCSZ00);
}

void uart0_send(uchar data)
{
	while(!(UCSR0A & (1<<UDRE0)));
	
	UDR0 = data;
}

void uart0_send_string(uchar *p)
{
    while(*p)
    {
        uart0_send(*p);
        p++;
    }
}

void delay(uint ms)
{
	uint i;
	for(ms;ms>0;ms--)
		for(i=1200;i>0;i--);
}

#pragma interrupt_handler uart0_rx_isr:iv_USART0_RXC
void uart0_rx_isr(void)
{
 	//uart has received a character in UDR
}

#pragma interrupt_handler uart0_udre_isr:iv_USART0_UDRE
void uart0_udre_isr(void)
{
 	//character transferred to shift register so UDR is now empty
}

#pragma interrupt_handler uart0_tx_isr:iv_USART0_TXC
void uart0_tx_isr(void)
{
 	//character has been transmitted
}

//call this routine to initialize all peripherals
void init_devices(void)
{
 	//stop errant interrupts until set up
 	CLI(); //disable all interrupts
 	XDIV  = 0x00; //xtal divider
 	XMCRA = 0x00; //external memory
 	port_init();
 	uart0_init(MYUBRR);

 	MCUCR = 0x00;
 	EICRA = 0x00; //extended ext ints
 	EICRB = 0x00; //extended ext ints
 	EIMSK = 0x00;
 	TIMSK = 0x00; //timer interrupt sources
 	ETIMSK = 0x00; //extended timer interrupt sources
 	SEI(); //re-enable interrupts
 	//all peripherals are now initialized
}

//
void main(void)
{
 	init_devices();
 	//insert your functional code here...
	delay(1000);
	uart0_send_string("CLS(0);DS24(30,2,'Usart-GPU 串口液晶屏 ',2);PL(0,28,319,28,15);SNF(30,30);DS24(30,55,'出品：APACHECTL',13);DS24(30,85,'网站：www.a-diy.cn',13);BS16(10,120,310,4,'　本页面可自由由上位机软件定义，具体资料以及程序请去网站下载。',15);BS16(10,160,310,4,'　静等10秒，演示开始；此间如有串口命令，则自动进入命令处理状态。',15);");
	while(1);
}

